package com.scrapper.service.webdriver;

import lombok.extern.slf4j.Slf4j;
import org.openqa.selenium.chrome.ChromeOptions;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

/**
 * –°–µ—Ä–≤—ñ—Å –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Chrome WebDriver
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é ChromeOptions —Ç–∞ –æ–±—Ö—ñ–¥ –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
 */
@Service
@Slf4j
public class WebDriverConfigService {

    @Value("${scraping.selenium.window.width:1920}")
    private int windowWidth;

    @Value("${scraping.selenium.window.height:1080}")
    private int windowHeight;

    @Value("${scraping.selenium.headless:false}")
    private boolean headless;

    @Value("${scraping.selenium.disable.images:true}")
    private boolean disableImages;

    @Value("${scraping.selenium.disable.javascript:false}")
    private boolean disableJavaScript;

    /**
     * –°—Ç–≤–æ—Ä—é—î —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î ChromeOptions –¥–ª—è —Å–∫—Ä–∞–ø—ñ–Ω–≥—É
     * @return –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ ChromeOptions
     */
    public ChromeOptions createChromeOptions() {
        log.info("üîß Creating Chrome options for scraping...");
        
        ChromeOptions options = new ChromeOptions();
        
        // ‚úÖ –ë–∞–∑–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏
        configureBasicSecurity(options);
        
        // ‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –æ–±—Ö–æ–¥—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –±–æ—Ç—ñ–≤
        configureAntiBotProtection(options);
        
        // ‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        configurePerformance(options);
        
        // ‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–∫–Ω–∞
        configureWindow(options);
        
        // ‚úÖ –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
        configureAdditionalSettings(options);
        
        log.info("‚úÖ Chrome options configured successfully");
        return options;
    }

    /**
     * –ù–∞–ª–∞—à—Ç–æ–≤—É—î –±–∞–∑–æ–≤—É –±–µ–∑–ø–µ–∫—É Chrome
     */
    private void configureBasicSecurity(ChromeOptions options) {
        options.addArguments("--no-sandbox");
        options.addArguments("--disable-dev-shm-usage");
        options.addArguments("--disable-gpu");
        options.addArguments("--disable-web-security");
        options.addArguments("--allow-running-insecure-content");
        
        log.debug("üîí Basic security options configured");
    }

    /**
     * –ù–∞–ª–∞—à—Ç–æ–≤—É—î –æ–±—Ö—ñ–¥ –¥–µ—Ç–µ–∫—Ü—ñ—ó –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó
     */
    private void configureAntiBotProtection(ChromeOptions options) {
        // –û–±—Ö—ñ–¥ –¥–µ—Ç–µ–∫—Ü—ñ—ó –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó
        options.addArguments("--disable-blink-features=AutomationControlled");
        options.addArguments("--disable-extensions");
        options.addArguments("--disable-plugins");
        
        // User-Agent –¥–ª—è –æ–±—Ö–æ–¥—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
        options.addArguments("--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36");
        
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –æ–±—Ö–æ–¥—É –±–ª–æ–∫—É–≤–∞–Ω–Ω—è
        options.addArguments("--disable-blink-features");
        options.addArguments("--disable-features=VizDisplayCompositor");
        options.addArguments("--disable-ipc-flooding-protection");
        
        log.debug("ü§ñ Anti-bot protection options configured");
    }

    /**
     * –ù–∞–ª–∞—à—Ç–æ–≤—É—î –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å Chrome
     */
    private void configurePerformance(ChromeOptions options) {
        // –í–∏–º–∫–Ω–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å –¥–ª—è —à–≤–∏–¥—à–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        if (disableImages) {
            options.addArguments("--disable-images");
            log.debug("üö´ Images disabled for performance");
        }
        
        // –í–∏–º–∫–Ω–µ–Ω–Ω—è JavaScript (–∑–∞ –ø–æ—Ç—Ä–µ–±–∏)
        if (disableJavaScript) {
            options.addArguments("--disable-javascript");
            log.debug("üö´ JavaScript disabled for performance");
        }
        
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
        options.addArguments("--disable-background-timer-throttling");
        options.addArguments("--disable-backgrounding-occluded-windows");
        options.addArguments("--disable-renderer-backgrounding");
        
        log.debug("‚ö° Performance options configured");
    }

    /**
     * –ù–∞–ª–∞—à—Ç–æ–≤—É—î –≤—ñ–∫–Ω–æ –±—Ä–∞—É–∑–µ—Ä–∞
     */
    private void configureWindow(ChromeOptions options) {
        // –†–æ–∑–º—ñ—Ä –≤—ñ–∫–Ω–∞
        options.addArguments(String.format("--window-size=%d,%d", windowWidth, windowHeight));
        
        // –ü–æ–∑–∏—Ü—ñ—è –≤—ñ–∫–Ω–∞
        options.addArguments("--start-maximized");
        
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–∫–Ω–∞
        options.addArguments("--disable-infobars");
        options.addArguments("--disable-notifications");
        
        log.debug("üñ•Ô∏è Window options configured: {}x{}", windowWidth, windowHeight);
    }

    /**
     * –ù–∞–ª–∞—à—Ç–æ–≤—É—î –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
     */
    private void configureAdditionalSettings(ChromeOptions options) {
        // –†–µ–∂–∏–º headless (–∑–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏)
        if (headless) {
            options.addArguments("--headless");
            log.debug("üëª Headless mode enabled");
        }
        
        // –í—ñ–¥–¥–∞–ª–µ–Ω–∏–π –¥–µ–±–∞–≥
        options.addArguments("--remote-debugging-port=9222");
        
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
        options.addArguments("--disable-features=TranslateUI");
        options.addArguments("--disable-features=BlinkGenPropertyTrees");
        
        log.debug("üîß Additional settings configured");
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î ChromeOptions –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è (–±–µ–∑ headless —Ä–µ–∂–∏–º—É)
     * @return ChromeOptions –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
     */
    public ChromeOptions createTestChromeOptions() {
        log.info("üß™ Creating Chrome options for testing...");
        
        ChromeOptions options = new ChromeOptions();
        
        // –î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–∂–¥–∏ –≤–∏–º–∏–∫–∞—î–º–æ headless —Ä–µ–∂–∏–º
        configureBasicSecurity(options);
        configureAntiBotProtection(options);
        configurePerformance(options);
        configureWindow(options);
        
        // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
        options.addArguments("--start-maximized");
        options.addArguments("--remote-debugging-port=9222");
        
        log.info("‚úÖ Test Chrome options configured successfully");
        return options;
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î ChromeOptions –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É (–∑ headless —Ä–µ–∂–∏–º–æ–º)
     * @return ChromeOptions –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É
     */
    public ChromeOptions createProductionChromeOptions() {
        log.info("üè≠ Creating Chrome options for production...");
        
        ChromeOptions options = createChromeOptions();
        
        // –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É –∑–∞–≤–∂–¥–∏ –≤–∫–ª—é—á–∞—î–º–æ headless —Ä–µ–∂–∏–º
        options.addArguments("--headless");
        
        log.info("‚úÖ Production Chrome options configured successfully");
        return options;
    }

    /**
     * –û–Ω–æ–≤–ª—é—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤—ñ–∫–Ω–∞
     * @param width –Ω–æ–≤–∞ —à–∏—Ä–∏–Ω–∞
     * @param height –Ω–æ–≤–∞ –≤–∏—Å–æ—Ç–∞
     */
    public void updateWindowSize(int width, int height) {
        this.windowWidth = width;
        this.windowHeight = height;
        log.info("üìê Window size updated to {}x{}", width, height);
    }

    /**
     * –ü–µ—Ä–µ–º–∏–∫–∞—î headless —Ä–µ–∂–∏–º
     * @param headless true –¥–ª—è –≤–∫–ª—é—á–µ–Ω–Ω—è headless —Ä–µ–∂–∏–º—É
     */
    public void setHeadlessMode(boolean headless) {
        this.headless = headless;
        log.info("üëª Headless mode set to: {}", headless);
    }

    /**
     * –ü–µ—Ä–µ–º–∏–∫–∞—î —Ä–µ–∂–∏–º –∑–æ–±—Ä–∞–∂–µ–Ω—å
     * @param disableImages true –¥–ª—è –≤–∏–º–∫–Ω–µ–Ω–Ω—è –∑–æ–±—Ä–∞–∂–µ–Ω—å
     */
    public void setImageMode(boolean disableImages) {
        this.disableImages = disableImages;
        log.info("üñºÔ∏è Image mode set to: {}", disableImages ? "disabled" : "enabled");
    }
}
