package com.scrapper.service;

import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * –°–µ—Ä–≤—ñ—Å –¥–ª—è —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –∑–≤—ñ—Ç—ñ–≤ –ø—Ä–æ —Å–∫—Ä–∞–ø—ñ–Ω–≥
 * –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –ª–æ–≥—É–≤–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —Ç–∞ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 */
@Service
@Slf4j
public class JobReportingService {

    /**
     * –§–æ—Ä–º—É—î –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∑–≤—ñ—Ç –ø—Ä–æ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—é –∑ –Ω–æ–≤–æ—é –ª–æ–≥—ñ–∫–æ—é
     */
    public void printUpdatedFinalReport(int totalCards, int passedFunctionFilter,
                                       int foundUrls, int finalJobs, int savedWithCompanyPrefix, 
                                       int savedWithoutCompanyPrefix, List<String> functions) {
        log.info("üìä –û–ù–û–í–õ–ï–ù–ò–ô –ó–í–Ü–¢ –ü–†–û –§–Ü–õ–¨–¢–†–ê–¶–Ü–Æ (–ù–û–í–ê –õ–û–ì–Ü–ö–ê):");
        log.info("   ‚Ä¢ –í—Å—å–æ–≥–æ –∫–∞—Ä—Ç–æ–∫: {}", totalCards);
        log.info("   ‚Ä¢ –ü—Ä–æ–π—à–ª–∏ —Ñ—ñ–ª—å—Ç—Ä —Ñ—É–Ω–∫—Ü—ñ–π: {}", passedFunctionFilter);
        log.info("   ‚Ä¢ –ó–Ω–∞–π–¥–µ–Ω–æ URL: {}", foundUrls);
        log.info("   ‚Ä¢ –ó–±–µ—Ä–µ–∂–µ–Ω–æ –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º –∫–æ–º–ø–∞–Ω—ñ—ó (–ë–ï–ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–µ–≥—ñ–≤): {}", savedWithCompanyPrefix);
        log.info("   ‚Ä¢ –ó–±–µ—Ä–µ–∂–µ–Ω–æ –±–µ–∑ –ø—Ä–µ—Ñ—ñ–∫—Å—É –∫–æ–º–ø–∞–Ω—ñ—ó (—Ç—ñ–ª—å–∫–∏ —Ñ—ñ–ª—å—Ç—Ä —Ñ—É–Ω–∫—Ü—ñ–π): {}", savedWithoutCompanyPrefix);
        log.info("   ‚Ä¢ –§—ñ–Ω–∞–ª—å–Ω–∏—Ö –≤–∞–∫–∞–Ω—Å—ñ–π: {}", finalJobs);
        
        if (totalCards > 0) {
            log.info("   ‚Ä¢ –ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —Ñ—É–Ω–∫—Ü—ñ–π: {:.1f}%", (double) passedFunctionFilter / totalCards * 100);
        }
        if (passedFunctionFilter > 0) {
            log.info("   ‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å—ñ—è –≤ URL: {:.1f}%", (double) foundUrls / passedFunctionFilter * 100);
        }
        if (foundUrls > 0) {
            log.info("   ‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Å—ñ—è –≤ —Ñ—ñ–Ω–∞–ª—å–Ω—ñ –≤–∞–∫–∞–Ω—Å—ñ—ó: {:.1f}%", (double) finalJobs / foundUrls * 100);
            log.info("   ‚Ä¢ –ß–∞—Å—Ç–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º –∫–æ–º–ø–∞–Ω—ñ—ó: {:.1f}%", (double) savedWithCompanyPrefix / foundUrls * 100);
            log.info("   ‚Ä¢ –ß–∞—Å—Ç–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –±–µ–∑ –ø—Ä–µ—Ñ—ñ–∫—Å—É –∫–æ–º–ø–∞–Ω—ñ—ó: {:.1f}%", (double) savedWithoutCompanyPrefix / foundUrls * 100);
        }
        log.info("   ‚Ä¢ –ó–∞—Å—Ç–æ—Å–æ–≤–∞–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó: {}", functions);
        
        // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–æ–≤–æ—ó –ª–æ–≥—ñ–∫–∏
        if (savedWithCompanyPrefix > 0) {
            log.info("‚úÖ –ù–æ–≤–∞ –ª–æ–≥—ñ–∫–∞ –ø—Ä–∞—Ü—é—î: {} –≤–∞–∫–∞–Ω—Å—ñ–π –∑–±–µ—Ä–µ–∂–µ–Ω–æ –∑ –ø—Ä–µ—Ñ—ñ–∫—Å–æ–º –∫–æ–º–ø–∞–Ω—ñ—ó –ë–ï–ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–µ–≥—ñ–≤", savedWithCompanyPrefix);
        }
        
        if (passedFunctionFilter > 0 && foundUrls == 0) {
            log.error("‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê: –í—Å—ñ {} –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–∏—Ö –∫–∞—Ä—Ç–æ–∫ –Ω–µ –¥–∞–ª–∏ URL!", passedFunctionFilter);
        }
        
        if (foundUrls > 0 && finalJobs == 0) {
            log.error("‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê: –í—Å—ñ {} –∑–Ω–∞–π–¥–µ–Ω–∏—Ö URL –Ω–µ –ø—Ä–æ–π—à–ª–∏ —Ñ—ñ–Ω–∞–ª—å–Ω—É –ø–µ—Ä–µ–≤—ñ—Ä–∫—É!", foundUrls);
        }
        
        log.info("üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: {} –∑ {} –∫–∞—Ä—Ç–æ–∫ —É—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ", finalJobs, totalCards);
        log.info("üîç –ù–û–í–ê –ì–Ü–ë–†–ò–î–ù–ê –õ–û–ì–Ü–ö–ê: 1) job functions ‚Üí 2) Load More (–û–î–ò–ù —Ä–∞–∑) ‚Üí 3) –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ ‚Üí 4) URL ‚Üí 5) –ø—Ä–µ—Ñ—ñ–∫—Å –∫–æ–º–ø–∞–Ω—ñ—ó ‚Üí 6) –∑–±—ñ—Ä —Ç–µ–≥—ñ–≤ (–±–µ–∑ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó)");
    }



    /**
     * –§–æ—Ä–º—É—î –∑–≤—ñ—Ç –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏
     */
    public void printErrorReport(String operation, Exception error, String additionalInfo) {
        log.error("‚ùå –ó–í–Ü–¢ –ü–†–û –ü–û–ú–ò–õ–ö–£:");
        log.error("   ‚Ä¢ –û–ø–µ—Ä–∞—Ü—ñ—è: {}", operation);
        log.error("   ‚Ä¢ –ü–æ–º–∏–ª–∫–∞: {}", error.getMessage());
        log.error("   ‚Ä¢ –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è: {}", additionalInfo);
        log.error("   ‚Ä¢ Stack trace:", error);
    }

    /**
     * –§–æ—Ä–º—É—î –∑–≤—ñ—Ç –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
     */
    public void printSuccessReport(String operation, int totalItems, long durationMs) {
        log.info("‚úÖ –ó–í–Ü–¢ –ü–†–û –£–°–ü–Ü–®–ù–ï –ó–ê–í–ï–†–®–ï–ù–ù–Ø:");
        log.info("   ‚Ä¢ –û–ø–µ—Ä–∞—Ü—ñ—è: {}", operation);
        log.info("   ‚Ä¢ –û–±—Ä–æ–±–ª–µ–Ω–æ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤: {}", totalItems);
        log.info("   ‚Ä¢ –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: {} –º—Å", durationMs);
        
        if (durationMs > 0) {
            double itemsPerSecond = (double) totalItems / (durationMs / 1000.0);
            log.info("   ‚Ä¢ –®–≤–∏–¥–∫—ñ—Å—Ç—å: {:.2f} –µ–ª–µ–º–µ–Ω—Ç—ñ–≤/—Å–µ–∫", itemsPerSecond);
        }
    }

    /**
     * –§–æ—Ä–º—É—î –∑–≤—ñ—Ç –ø—Ä–æ –ø—Ä–æ–≥—Ä–µ—Å –æ–±—Ä–æ–±–∫–∏
     */
    public void printProgressReport(int current, int total, String operation) {
        if (current % 10 == 0 || current == total) {
            double percentage = (double) current / total * 100;
            log.info("üìä –ü—Ä–æ–≥—Ä–µ—Å {}: {}/{} ({:.1f}%)", operation, current, total, percentage);
        }
    }

    /**
     * –§–æ—Ä–º—É—î –∑–≤—ñ—Ç –ø—Ä–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∫—Ä–∞–ø—ñ–Ω–≥—É
     */
    public void printScrapingStatistics(int totalPages, int totalJobs, int totalErrors, 
                                       long totalDuration, List<String> jobFunctions) {
        log.info("üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ö–†–ê–ü–Ü–ù–ì–£:");
        log.info("   ‚Ä¢ –û–±—Ä–æ–±–ª–µ–Ω–æ —Å—Ç–æ—Ä—ñ–Ω–æ–∫: {}", totalPages);
        log.info("   ‚Ä¢ –ó–Ω–∞–π–¥–µ–Ω–æ –≤–∞–∫–∞–Ω—Å—ñ–π: {}", totalJobs);
        log.info("   ‚Ä¢ –ü–æ–º–∏–ª–æ–∫: {}", totalErrors);
        log.info("   ‚Ä¢ –ó–∞–≥–∞–ª—å–Ω–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: {} –º—Å", totalDuration);
        log.info("   ‚Ä¢ –§—ñ–ª—å—Ç—Ä —Ñ—É–Ω–∫—Ü—ñ–π: {}", jobFunctions);
        
        if (totalDuration > 0) {
            double jobsPerSecond = (double) totalJobs / (totalDuration / 1000.0);
            log.info("   ‚Ä¢ –ó–∞–≥–∞–ª—å–Ω–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å: {:.2f} –≤–∞–∫–∞–Ω—Å—ñ–π/—Å–µ–∫", jobsPerSecond);
        }
        
        if (totalPages > 0) {
            double jobsPerPage = (double) totalJobs / totalPages;
            log.info("   ‚Ä¢ –°–µ—Ä–µ–¥–Ω—è –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≤–∞–∫–∞–Ω—Å—ñ–π –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É: {:.1f}", jobsPerPage);
        }
        
        if (totalJobs > 0) {
            double errorRate = (double) totalErrors / totalJobs * 100;
            log.info("   ‚Ä¢ –ß–∞—Å—Ç–∫–∞ –ø–æ–º–∏–ª–æ–∫: {:.1f}%", errorRate);
        }
    }
}

